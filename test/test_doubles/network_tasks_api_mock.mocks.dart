// Mocks generated by Mockito 5.4.2 from annotations
// in todo_list_app/test/test_doubles/network_tasks_api_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_list_app/features/tasks/domain/api/network_tasks_api.dart'
    as _i3;
import 'package:todo_list_app/features/tasks/domain/models/response_data.dart'
    as _i2;
import 'package:todo_list_app/features/tasks/domain/models/task_model.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponseData_0<T> extends _i1.SmartFake
    implements _i2.ResponseData<T> {
  _FakeResponseData_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkTasksApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkTasksApi extends _i1.Mock implements _i3.NetworkTasksApi {
  MockNetworkTasksApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ResponseData<_i5.Task>> addTask(_i5.Task? task) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTask,
          [task],
        ),
        returnValue: _i4.Future<_i2.ResponseData<_i5.Task>>.value(
            _FakeResponseData_0<_i5.Task>(
          this,
          Invocation.method(
            #addTask,
            [task],
          ),
        )),
      ) as _i4.Future<_i2.ResponseData<_i5.Task>>);
  @override
  _i4.Future<_i2.ResponseData<_i5.Task>> deleteTask(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [id],
        ),
        returnValue: _i4.Future<_i2.ResponseData<_i5.Task>>.value(
            _FakeResponseData_0<_i5.Task>(
          this,
          Invocation.method(
            #deleteTask,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.ResponseData<_i5.Task>>);
  @override
  _i4.Future<_i2.ResponseData<_i5.Task>> getTask(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTask,
          [id],
        ),
        returnValue: _i4.Future<_i2.ResponseData<_i5.Task>>.value(
            _FakeResponseData_0<_i5.Task>(
          this,
          Invocation.method(
            #getTask,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.ResponseData<_i5.Task>>);
  @override
  _i4.Future<_i2.ResponseData<List<_i5.Task>>> getTasks() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTasks,
          [],
        ),
        returnValue: _i4.Future<_i2.ResponseData<List<_i5.Task>>>.value(
            _FakeResponseData_0<List<_i5.Task>>(
          this,
          Invocation.method(
            #getTasks,
            [],
          ),
        )),
      ) as _i4.Future<_i2.ResponseData<List<_i5.Task>>>);
  @override
  _i4.Future<_i2.ResponseData<_i5.Task>> updateTask(_i5.Task? task) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTask,
          [task],
        ),
        returnValue: _i4.Future<_i2.ResponseData<_i5.Task>>.value(
            _FakeResponseData_0<_i5.Task>(
          this,
          Invocation.method(
            #updateTask,
            [task],
          ),
        )),
      ) as _i4.Future<_i2.ResponseData<_i5.Task>>);
  @override
  _i4.Future<_i2.ResponseData<List<_i5.Task>>> syncTasks(
          List<_i5.Task>? tasks) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncTasks,
          [tasks],
        ),
        returnValue: _i4.Future<_i2.ResponseData<List<_i5.Task>>>.value(
            _FakeResponseData_0<List<_i5.Task>>(
          this,
          Invocation.method(
            #syncTasks,
            [tasks],
          ),
        )),
      ) as _i4.Future<_i2.ResponseData<List<_i5.Task>>>);
}
